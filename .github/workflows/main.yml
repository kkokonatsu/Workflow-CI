# .github/workflows/main.yml
name: Train and Deploy MLflow Model

on:
  push:
    branches:
      - main
    paths:
      - 'MLproject/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  train-model:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      USERNAME: ${{ secrets.DOCKER_USERNAME }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.7'

      - name: Install Miniconda and Setup Environment
        run: |
          # Download dan instal Miniconda
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda

          echo "$HOME/miniconda/bin" >> $GITHUB_PATH

          source $HOME/miniconda/bin/activate
          conda init bash

          eval "$(conda shell.bash hook)"

          cd MLproject 
          conda env create -f conda.yaml

          conda --version
          conda env list

          cd ..

      - name: Run MLflow Project (Direct Python Execution)
        working-directory: ./MLproject
        run: |
          source $HOME/miniconda/bin/activate mlflow-env 

          export MLFLOW_TRACKING_URI=file://$(pwd)/mlruns 

          python modelling.py \
          --train_x personality_preprocessing/X_train_personality_processing.csv \
          --test_x personality_preprocessing/X_test_personality_processing.csv \
          --train_y personality_preprocessing/y_train.csv \
          --test_y personality_preprocessing/y_test.csv \
          --lr_c 0.1 --lr_penalty l2 --random_state 42

      - name: Upload MLflow Runs as Artifact (Local Copy)
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-runs-local-copy
          path: MLproject/mlruns/
          retention-days: 7

      - name: Get latest RUN_ID
        id: get_run_id
        working-directory: MLproject
        run: |
          # Dapatkan RUN_ID dari folder mlruns/0/runs/ lokal
          # Ini akan bekerja karena mlruns/ lokal sekarang dijamin terisi
          RUN_ID=$(ls -Art mlruns/0/runs/ | tail -n 1) 
          echo "Latest RUN_ID: $RUN_ID"
          echo "RUN_ID=$RUN_ID" >> $GITHUB_OUTPUT

      - name: Copy model artifact for Git/Docker
        run: |
          mkdir -p artifact_model_storage_Terbaru_dari_github_actions
          cp -r MLproject/mlruns/0/runs/${{ steps.get_run_id.outputs.RUN_ID }}/artifacts/logistic_regression_model/* artifact_model_storage_Terbaru_dari_github_actions/

      - name: Commit and Push model artifact to Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add artifact_model_storage_Terbaru_dari_github_actions/
          git commit -m "Automated: Add latest trained model artifact from run ${{ steps.get_run_id.outputs.RUN_ID }}" || echo "Nothing to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push origin HEAD:${{ github.ref_name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME="${{ secrets.USERNAME }}/personality-classifier-model:latest"

          echo "Building Docker image from MLflow model..."
          # Path ini menunjuk ke lokasi model yang disalin dari mlruns lokal
          mlflow models build-docker -m artifact_model_storage_Terbaru_dari_github_actions/logistic_regression_model/ -n $IMAGE_NAME 

          echo "Pushing image to Docker Hub..."
          docker push $IMAGE_NAME
